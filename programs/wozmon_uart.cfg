MEMORY {
    ZP:         start = $0000, size = $0100, type = rw;     # Zero page
    STACK:      start = $0100, size = $0100, type = rw;     # Hardware stack
    RAM:        start = $0200, size = $7E00, type = rw;     # General RAM (not written to file)
    PROG:       start = $0200, size = $7E00, type = ro, file = %O;  # Program image written to %O
    UART:       start = $FE00, size = $0004, type = rw;     # ACIA (for reference)
}

SEGMENTS {
    ZEROPAGE:   load = ZP,     type = zp,  optional = yes;
    BSS:        load = RAM,    type = bss, optional = yes;
    CODE:       load = PROG,   type = ro,  define = yes;    # Main code
    RODATA:     load = PROG,   type = ro,  optional = yes;  # Consts/strings  
    DATA:       load = PROG,   type = ro,  optional = yes;  # Initialized data
}

SYMBOLS {
    UART_DATA:      type = weak, value = $FE00;
    UART_STATUS:    type = weak, value = $FE01;
    UART_COMMAND:   type = weak, value = $FE02;
    UART_CONTROL:   type = weak, value = $FE03;
}

